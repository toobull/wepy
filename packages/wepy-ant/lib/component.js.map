{"version":3,"sources":["../src/component.js"],"names":["Props","check","t","val","String","Number","Boolean","Function","Object","Array","toString","call","build","props","rst","forEach","p","keys","type","valid","key","some","getValue","value","undefined","default","coerce","$com","$mixins","$isComponent","$prefix","$mappingProps","data","methods","$wxpage","$root","$parent","self","$wxapp","k","defaultData","binded","inRepeat","repeatKey","$initData","util","$copy","$props","test","substring","length","$name","repeat","for","bindfor","binddata","split","mapping","from","twoWay","$data","$setIndex","computed","fn","setData","coms","getOwnPropertyNames","name","$init","getWxPage","onLoad","mix","$apply","mixins","inst","push","v","tmp","reg","RegExp","replace","noPrefix","getCurrentPages","index","$index","com","indexOf","path","s","i","$getComponent","method","Error","args","$evt","event","apply","concat","evtName","queue","active","current","shift","c","getEventsFn","source","$events","comContext","$$phase","$digest","originData","readyToSet","$isEqual","watch","changed","events","typeFn","fnFn"],"mappings":"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","file":"component.js","sourcesContent":["/**\n * Tencent is pleased to support the open source community by making WePY available.\n * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.\n * \n * Licensed under the MIT License (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n * http://opensource.org/licenses/MIT\n * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport event from './event';\nimport util from './util';\n\n\nconst Props = {\n    check (t, val) {\n        switch (t) {\n            case String:\n                return typeof(val) === 'string';\n            case Number:\n                return typeof(val) === 'number';\n            case Boolean:\n                return typeof(val) === 'boolean';\n            case Function:\n                return typeof(val) === 'function';\n            case Object:\n                return typeof(val) === 'object';\n            case Array:\n                return toString.call(val) === '[object Array]';\n            default:\n                return val instanceof t;\n        }\n    },\n    build (props) {\n        let rst = {};\n        if (typeof(props) === 'string') {\n            rst[props] = {};\n        } else if (toString.call(props) === '[object Array]') {\n            props.forEach((p) => {\n                rst[p] = {};\n            });\n        } else {\n            Object.keys(props).forEach(p => {\n                if (typeof(props[p]) === 'function') {\n                    rst[p] = {\n                        type: [props[p]]\n                    }\n                } else if (toString.call(props[p]) === '[object Array]') {\n                    rst[p] = {\n                        type: props[p]\n                    }\n                } else\n                    rst[p] = props[p];\n\n                if (rst[p].type && toString.call(rst[p].type) !== '[object Array]')\n                    rst[p].type = [rst[p].type];\n            });\n        }\n        return rst;\n    },\n    valid (props, key, val) {\n        let valid = false;\n        if (props[key]) {\n            if (!props[key].type) {\n                valid = true;\n            } else {\n                return props[key].type.some(t => this.check(t, val));\n            }\n        }\n        return valid;\n    },\n    getValue (props, key, value) {\n        var rst;\n        if (value !== undefined && this.valid(props, key, value)) {\n            rst = value;\n        } else if (typeof(props[key].default) === 'function') {\n            rst = props[key].default();\n        } else\n            rst = props[key].default;\n        return props[key].coerce ? props[key].coerce(rst) : rst;\n    }\n};\n\nexport default class {\n\n    $com = {};\n    $mixins = [];\n\n    $isComponent = true;\n    $prefix = '';\n\n    $mappingProps = {};\n\n    data = {};\n    methods = {};\n\n    $init ($wxpage, $root, $parent) {\n        let self = this;\n\n        this.$wxpage = $wxpage;\n        if (this.$isComponent) {\n            this.$root = $root || this.$root;\n            this.$parent = $parent || this.$parent;\n            this.$wxapp = this.$root.$parent.$wxapp;\n        }\n\n        if (this.props) {\n            this.props = Props.build(this.props);\n        }\n\n        let k, defaultData = {};\n\n\n        let props = this.props;\n        let key, val, binded;\n        let inRepeat = false, repeatKey;\n\n\n        // save a init data.\n        if (this.$initData === undefined) {\n            this.$initData = util.$copy(this.data, true);\n        } else {\n            this.data = util.$copy(this.$initData, true);\n        }\n\n        if (this.$props) { // generate mapping Props\n            for (key in this.$props) {\n                for (binded in this.$props[key]) {\n                    if (/\\.sync$/.test(binded)) { // sync goes to mapping\n                        if (!this.$mappingProps[this.$props[key][binded]])\n                            this.$mappingProps[this.$props[key][binded]] = {};\n                        this.$mappingProps[this.$props[key][binded]][key] = binded.substring(7, binded.length - 5);\n                    }\n                }\n            }\n        }\n\n        if (props) {\n            for (key in props) {\n                val = undefined;\n                if ($parent && $parent.$props && $parent.$props[this.$name]) {\n                    val = $parent.$props[this.$name][key];\n                    binded = $parent.$props[this.$name][`v-bind:${key}.once`] || $parent.$props[this.$name][`v-bind:${key}.sync`];\n                    if (binded) {\n                        if (typeof(binded) === 'object') {\n                            props[key].repeat = binded.for;\n                            \n                            inRepeat = true;\n\n                            let bindfor = binded.for, binddata = $parent;\n                            bindfor.split('.').forEach(t => {\n                                binddata = binddata[t];\n                            });\n                            repeatKey = Object.keys(binddata)[0];\n\n\n                            if (!this.$mappingProps[key]) this.$mappingProps[key] = {};\n                            this.$mappingProps[key]['parent'] = {\n                                mapping: binded.for,\n                                from: key\n                            };\n                        } else {\n                            val = $parent[binded];\n                            if (props[key].twoWay) {\n                                if (!this.$mappingProps[key]) this.$mappingProps[key] = {};\n                                this.$mappingProps[key]['parent'] = binded;\n                            }\n                        }\n                    } else if (typeof val === 'object' && val.value !== undefined) { // 静态传值\n                        this.data[key] = val.value;\n                    }\n                }\n                if (!this.data[key] && !props[key].repeat) {\n                    val = Props.getValue(props, key, val);\n                    this.data[key] = val;\n                }\n            }\n        }\n\n        for (k in this.data) {\n            defaultData[`${this.$prefix}${k}`] = this.data[k];\n            this[k] = this.data[k];\n            //this[k] = util.$copy(this.data[k], true);\n        }\n\n        this.$data = util.$copy(this.data, true);\n        if (inRepeat)\n            this.$setIndex(repeatKey);\n\n        if (this.computed) {\n            for (k in this.computed) {\n                let fn = this.computed[k];\n                defaultData[`${this.$prefix}${k}`] = fn.call(this);\n                this[k] = util.$copy(defaultData[`${this.$prefix}${k}`], true);\n            }\n        }\n        this.setData(defaultData);\n\n        let coms = Object.getOwnPropertyNames(this.$com);\n        if (coms.length) {\n            coms.forEach((name) => {\n                this.$com[name].$init(this.getWxPage(), $root, this);\n                this.$com[name].onLoad && this.$com[name].onLoad();\n\n                this.$com[name].$mixins.forEach((mix) => {\n                    mix['onLoad'] && mix['onLoad'].call(this.$com[name]);\n                });\n\n                this.$com[name].$apply();\n            });\n        }\n    }\n\n    $initMixins () {\n        if (this.mixins) {\n            if (typeof(this.mixins) === 'function') {\n                this.mixins = [this.mixins];\n            }\n        } else {\n            this.mixins = [];\n        }\n        this.mixins.forEach((mix) => {\n            let inst = new mix();\n            inst.$init(this);\n            this.$mixins.push(inst);\n        });\n    }\n\n    onLoad () {\n    }\n\n    setData (k, v) {\n        if (typeof(k) === 'string') {\n            if (v) {\n                let tmp = {};\n                tmp[k] = v;\n                k = tmp;\n            } else {\n                let tmp = {};\n                tmp[k] = this.data[`${k}`];\n                k = tmp;\n            }\n            return this.$wxpage.setData(k);\n        }\n        let t = null, reg = new RegExp('^' + this.$prefix.replace(/\\$/g, '\\\\$'), 'ig');\n        for (t in k) {\n            let noPrefix = t.replace(reg, '');\n            this.$data[noPrefix] = util.$copy(k[t], true);\n        }\n        return this.$wxpage.setData(k);\n    }\n\n    getWxPage () {\n        return this.$wxpage;\n    }\n\n    getCurrentPages () {\n        return this.$wxpage.getCurrentPages();\n    }\n\n    /**\n     * 对于在repeat中的组件，index改变时需要修改对应的数据\n     */\n    $setIndex (index) {\n        if (this.$index === index)\n            return;\n\n        this.$index = index;\n\n        let props = this.props,\n            $parent = this.$parent;\n        let key, val, binded;\n        if (props) {\n            for (key in props) {\n                val = undefined;\n                if ($parent && $parent.$props && $parent.$props[this.$name]) {\n                    val = $parent.$props[this.$name][key];\n                    binded = $parent.$props[this.$name][`v-bind:${key}.once`] || $parent.$props[this.$name][`v-bind:${key}.sync`];\n                    if (binded) {\n                        if (typeof(binded) === 'object') {\n                            let bindfor = binded.for, binddata = $parent;\n                            bindfor.split('.').forEach(t => {\n                                binddata = binddata[t];\n                            });\n\n                            val = binddata[index];\n                            this.$index = index;\n                            this.data[key] = val;\n                            this[key] = val;\n                            this.$data[key] = util.$copy(this[key], true);\n                        }\n                    }\n                }\n            }\n            // Clear all childrens index;\n            for (key in this.$com) {\n                this.$com[key].$index = undefined;\n            }\n        }\n\n    }\n\n    $getComponent(com) {\n        if (typeof(com) === 'string') {\n            if (com.indexOf('/') === -1) {\n                return this.$com[com];\n            } else if (com === '/') {\n                return this.$parent;\n            } else {\n                let path = com.split('/');\n                path.forEach((s, i) => {\n                    if (i === 0) {\n                        if (s === '') {   //   /a/b/c\n                            com = this.$root;\n                        } else if (s === '.') {\n                            // ./a/b/c\n                            com = this;\n                        } else if (s === '..') {\n                            // ../a/b/c\n                            com = this.$parent;\n                        } else {\n                            com = this.$getComponent(s);\n                        }\n                    } else if (s) {\n                        com = com.$com[s];\n                    }\n                });\n            }\n        }\n        return (typeof(com) !== 'object') ? null : com;\n    }\n\n    $invoke (com, method, ...args) {\n        com = this.$getComponent(com);\n\n        if (!com) {\n            throw new Error('Invalid path: ' + com);\n        }\n\n        let fn = com.methods ? com.methods[method] : '';\n\n        if (typeof(fn) === 'function') {\n            let $evt = new event('', this, 'invoke');\n            let rst = fn.apply(com, args.concat($evt));\n            com.$apply();\n            return rst;\n        } else {\n            fn = com[method];\n        }\n\n        if (typeof(fn) === 'function') {\n            return fn.apply(com, args);\n        } else {\n            throw new Error('Invalid method: ' + method);\n        }\n    }\n\n    $broadcast (evtName, ...args) {\n        let com = this;\n        let $evt = typeof(evtName) === 'string' ? new event(evtName, this, 'broadcast') : $evt;\n        let queue = [com];\n\n        while(queue.length && $evt.active) {\n            let current = queue.shift();\n            for (let c in current.$com) {\n                c = current.$com[c];\n                queue.push(c);\n                let fn = getEventsFn(c, evtName);\n                if (fn) {\n                    c.$apply(() => {\n                        fn.apply(c, args.concat($evt));\n                    });\n                }\n                if (!$evt.active)\n                    break;\n            }\n        }\n    }\n\n    $emit (evtName, ...args) {\n        let com = this;\n        let source = this;\n        let $evt = new event(evtName, source, 'emit');\n\n        // User custom event;\n        if (this.$parent.$events && this.$parent.$events[this.$name]) {\n            let method = this.$parent.$events[this.$name]['v-on:' + evtName];\n            if (method && this.$parent.methods) {\n                let fn = this.$parent.methods[method];\n                if (typeof(fn) === 'function') {\n                    this.$parent.$apply(() => {\n                        fn.apply(this.$parent, args.concat($evt));\n                    });\n                    return;\n                } else {\n                    throw new Error(`Invalid method from emit, component is ${this.$parent.$name}, method is ${method}. Make sure you defined it already.\\n`);\n                }\n            }\n        }\n        while(com && com.$isComponent !== undefined && $evt.active) {\n            // 保存 com 块级作用域组件实例\n            let comContext = com;\n            let fn = getEventsFn(comContext, evtName);\n            fn && comContext.$apply(() => {\n                fn.apply(comContext, args.concat($evt));\n            });\n            com = comContext.$parent;\n        }\n    }\n\n    $apply (fn) {\n        if (typeof(fn) === 'function') {\n            fn.call(this);\n            this.$apply();\n        } else {\n            if (this.$$phase) {\n                this.$$phase = '$apply';\n            } else {\n                this.$digest();\n            }\n        }\n    }\n\n    $digest () {\n        let k;\n        let originData = this.$data;\n        this.$$phase = '$digest';\n        while (this.$$phase) {\n            let readyToSet = {};\n            for (k in originData) {\n                if (!util.$isEqual(this[k], originData[k])) { // compare if new data is equal to original data\n                    // data watch trigger\n                    if (this.watch) {\n                        if (this.watch[k]) {\n                            if (typeof this.watch[k] === 'function') {\n                                this.watch[k].call(this, this[k], originData[k]);\n                            } else if (typeof this.watch[k] === 'string' && typeof this.methods[k] === 'function') {\n                                this.methods[k].call(this, this[k], originData[k]);\n                            }\n                        }\n                    }\n                    // Send to ReadyToSet\n                    readyToSet[this.$prefix + k] = this[k]; \n                    this.data[k] = this[k];\n                    originData[k] = util.$copy(this[k], true);\n                    if (this.$mappingProps[k]) {\n                        Object.keys(this.$mappingProps[k]).forEach((changed) => {\n                            let mapping = this.$mappingProps[k][changed];\n                            if (typeof(mapping) === 'object') {\n                                this.$parent.$apply();\n                            } else if (changed === 'parent' && !util.$isEqual(this.$parent.$data[mapping], this[k])) {\n                                this.$parent[mapping] = this[k];\n                                this.$parent.data[mapping] = this[k];\n                                this.$parent.$apply();\n                            } else if (changed !== 'parent' && !util.$isEqual(this.$com[changed].$data[mapping], this[k])) {\n                                this.$com[changed][mapping] = this[k];\n                                this.$com[changed].data[mapping] = this[k];\n                                this.$com[changed].$apply();\n                            }\n                        });\n                    }\n                }\n            }\n            if (Object.keys(readyToSet).length) {\n                if (this.computed) {\n                    for (k in this.computed) { // If there are computed property, calculated every times\n                        let fn = this.computed[k], val = fn.call(this);\n                        if (!util.$isEqual(this[k], val)) { // Value changed, then send to ReadyToSet\n                            readyToSet[this.$prefix + k] = val;\n                            this[k] = util.$copy(val, true);\n                        }\n                    }\n                }\n                this.setData(readyToSet);\n            }\n            this.$$phase = (this.$$phase === '$apply') ? '$digest' : false;\n        }\n    }\n\n}\n\nfunction getEventsFn (comContext, evtName) {\n    let fn = comContext.events ? comContext.events[evtName] : undefined;\n    const typeFn = typeof(fn);\n    let fnFn;\n    if (typeFn === 'string') {\n        // 如果 events[k] 是 string 类型 则认为是调用 methods 上方法\n        const method = comContext.methods && comContext.methods[fn];\n        if (typeof(method) === 'function') {\n            fnFn = method;\n        }\n    } else if (typeFn === 'function') {\n        fnFn = fn;\n    }\n    return fnFn;\n}"]}